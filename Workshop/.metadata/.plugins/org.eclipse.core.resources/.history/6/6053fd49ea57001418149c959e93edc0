import java.util.Scanner;


public class TtcGameEngine {
	Scanner scanner = new Scanner(System.in);
	public boolean player1Turn;
	private final char player1Symbol = 'X';
	private final char player2Symbol = 'O';
	TtcBoard map = new TtcBoard(3,3);
	int currentRow ;
	int currentColumn;
	
	public TtcGameEngine(){

	}
	void newBoard(){


		map.printMap();
	}
	public void requestMove(boolean player1Turn){
		boolean validInput = false;
		do{
			if(player1Turn == true){
				System.out.println("Player 1, please enter row and column (0, 1 or 2): ");
			}else{
				System.out.println("Player 2, plese enter row and column (0, 1 or 2): ");
			}
			int row =scanner.nextInt();
			int column = scanner.nextInt();
			if(row >=0 && column >=0 && map.getMap()[row][column]== ' '){
				currentRow = row;
				currentColumn = column;
				if(player1Turn == true){
					map.getMap()[currentRow][currentColumn] = 'X';
					validInput = true;
				}else{
					map.getMap()[currentRow][currentColumn] = 'O';
					validInput = true;
				}
			}else{ 
				System.out.println("This move at (" + (row + 1) + "," + (column + 1) + ") is not valid. Try again...");
			}
		}
		while(!validInput);
	}
	private boolean checkRowCol(char X, char O, char empty) {
		return ((X != empty) && (X == O) && (O == empty));
	}
	private boolean checkRowWinner(){
		for (int i = 0; i < 3; i++) {
			if (checkRowCol(map.getMap()[i][0], map.getMap()[i][1], map.getMap()[i][2]) == true) {
				return true;
			}
		}
		return false;
	}
	private boolean checkcolumnWinner(){
		for (int i = 0; i < 3; i++) {
			if (checkRowCol(map.getMap()[0][i], map.getMap()[1][i], map.getMap()[2][i]) == true) {
				return true;
			}
		}
		return false;
	}
	private boolean checkDiagonalsForWin() {
		        return ((checkRowCol(map.getMap()[0][0], map.getMap()[1][1], map.getMap()[2][2]) == true) 
		        		|| (checkRowCol(map.getMap()[0][2], map.getMap()[1][1], map.getMap()[2][0]) == true));
		    }
	public boolean checkForWinner(){
		 return (checkRowWinner() || checkcolumnWinner() || checkDiagonalsForWin());
	}
	public void checkTurn(){
		if(player1Turn==true){
			player1Turn = true;
		}
		player1Turn = false;
	}
}


